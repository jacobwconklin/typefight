// import material library if I settle on one

// .SpacebarInvadersGameplay {
    
// }

.OuterBounds {
    background-image: url('../../../../Assets/Games/SpacebarInvaders/space-stars-background.jpg');
    background-size: contain;
    background-repeat: repeat;
    min-width: 100%;
    min-height: calc(100vh - 250px);
    height: fit-content;
    display: flex;
    align-items: center;
    justify-content: center;
}


// Maybe use media queries to have several set screen sizes? 
// Standard size if screen fits 750 x 750:
.GameElements {
    width: 750px;
    height: 750px;
    // background-color: rgba(255, 255, 255, 0.06);
    border-radius: 50%;
    overflow: hidden; // WILL INCLUDE THIS
}

@media only screen and (max-width: 800px), (max-height: 1000px) {
    .GameElements {
        width: 500px;
        height: 500px;
    }

    .Planet {
        max-width: 33px;
        max-height: 33px;
    }

    .EnemyImage {
        max-width: 33px;
        max-height: 33px;
    }

    .Missile {
        max-width: 33px;
        max-height: 33px;
    }

    .Enemy {
        transition: translate 1.2s;
    }
}

@media only screen and (max-width: 550px), (max-height: 750px) {
    .GameElements {
        width: 250px;
        height: 250px;
    }

    .Planet {
        max-width: 20px;
        max-height: 20px;
    }

    .EnemyImage {
        max-width: 20px;
        max-height: 20px;
    }

    .Missile {
        max-width: 33px;
        max-height: 33px;
    }

    .Enemy {
        transition: translate 1.0s;
    }
}

.Holder {
    width: 100%;
    height: 100%;
    display: grid;
    justify-items: center;
    align-items: center;

    .Radar {
        grid-column: 1;
        grid-row: 1;
        // background-color: rgba(255, 255, 255, 0.05);
        border-radius: 50%;
        animation: radar 4s linear infinite;
    }

    .Planet {
        height: 50px;
        width: 50px;
        grid-column: 1;
        grid-row: 1;
    }
    
    .Enemy {
        grid-column: 1;
        grid-row: 1;
        transition: translate 1.5s; // TODO this will depend on speed of status updates so asteroids move continually

        .EnemyImage {
            width: 50px;
            height: 50px;
        }

        .EnemyText {
            background-color: black;
            padding: 2px 7px 2px 7px;
            color: white;
            margin: 0px;
        }

    }

    .Missile {
        grid-column: 1;
        grid-row: 1;
        transition: translate 0.8s;
        width: 50px;
        height: 50px;
    }

}

.TypeHolder {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: black;
    height: 200px;

    .WaveAndHealth {
        display: flex;
        color: white;
    }

    .WaveAndHealth > * {
        padding-right: 50px;
    }

    .TypeHere {
        width: 300px;
    }
}

.CompleteText {
    color: white;
    transition: all 0.5s;
}

@keyframes radar {
    0% {
        width: 10px;
        height: 10px;
        border: 6px solid rgba(0, 128, 0, 0.5);
    }
    25% {
    }
    50% {
        border: 5px solid rgba(0, 128, 0, 0.3);
    }
    75% {
    }
    100% {
        border: 4px solid rgba(0, 128, 0, 0.1);
        width: 100%;
        height: 100%;
    }
  }

  @keyframes spin {
    0% {
        transform: rotateZ(0deg);
    }
    25% {
    }
    50% {

    }
    75% {
    }
    100% {
        transform: rotateZ(360deg);
    }
  }